version: '3.4'

services:
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    container_name: apigateway
    build:
      context: .
      dockerfile: src/ApiGateways/Web.Bff/Web.Bff.ApiGateway/Dockerfile
    ports:
    - "5000:80" 

  identity.api:
    image: ${DOCKER_REGISTRY-}identity.api
    container_name: identity.api
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.API/Dockerfile
    environment:
    - ConnectionString=Server=sqldata;Database=IdentityDb;User Id=admin;Password=Qwerty123
    - RabbitMQ=rabbitmq:5672
    - Cache=cachedata
    ports:
    - "5001:80"  

  question.api:
    image: ${DOCKER_REGISTRY-}question.api
    container_name: question.api
    build:
      context: .
      dockerfile: src/Services/Question/Question.API/Dockerfile
    environment:
    - ConnectionString=Server=sqldata;Database=QuestionDb;User Id=admin;Password=Qwerty123
    - RabbitMQ=rabbitmq
    - Cache=cachedata
    ports:
    - "5002:80"  

  answer.api:
    image: ${DOCKER_REGISTRY-}answer.api
    container_name: answer.api
    build:
      context: .
      dockerfile: src/Services/Answer/Answer.API/Dockerfile
    environment:
    - ConnectionString=Server=sqldata;Database=QuestionDb;User Id=admin;Password=Qwerty123
    - RabbitMQ=rabbitmq
    - Cache=cachedata
    ports:
    - "5003:80" 

  sqldata:
    image: postgres:13.3
    container_name: sqldata
    environment:
       POSTGRES_USER: "admin"
       POSTGRES_PASSWORD: "Qwerty123"
    volumes:
      - corviana-backend-sqldata:/var/lib/postgresql/data

  cachedata:
    container_name: cachedata
    image: redis:latest
 
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
    corviana-backend-sqldata:
        driver: local











