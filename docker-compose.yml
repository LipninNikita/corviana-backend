version: '3.4'

services:
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    container_name: apigateway
    build:
      context: .
      dockerfile: src/ApiGateways/Web.Bff/Web.Bff.ApiGateway/Dockerfile
    ports:
    - "5000:80" 

  identity.api:
    image: ${DOCKER_REGISTRY-}identityapi
    container_name: identityAPI
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.API/Dockerfile
    environment:
    - ConnectionString=Server=sqldata;Database=IdentityDb;User Id=admin;Password=Qwerty123
    - RabbitMQ=rabbitmq:5672
    - Cache=cachedata
    ports:
    - "5001:80"  
    
  post.api:
    image: ${DOCKER_REGISTRY-}postapi
    container_name: postAPI
    build:
      context: .
      dockerfile: src/Services/Post/Post.API/Dockerfile
    environment:
    - ConnectionString=Server=sqldata;Database=IdentityDb;User Id=admin;Password=Qwerty123
    - RabbitMQ=rabbitmq:5672
    - Cache=cachedata
    ports:
    - "5002:80"

  postcomments.api:
    image: ${DOCKER_REGISTRY-}postcommentsapi    
    container_name: postCommentsAPI
    build:
      context: .
      dockerfile: src/Services/PostComments/PostComments.API/Dockerfile
    environment:
    - ConnectionString=Server=sqldata;Database=IdentityDb;User Id=admin;Password=Qwerty123
    - RabbitMQ=rabbitmq:5672
    - Cache=cachedata
    ports:
    - "5003:80"
  
  mediastorage.api:
    image: ${DOCKER_REGISTRY-}mediastorageapi
    container_name: mediaStorageAPI
    build:
      context: .
      dockerfile: src/Services/MediaStorage/MediaStorage.API/Dockerfile    
    environment:
    - ConnectionString=Server=sqldata;Database=IdentityDb;User Id=admin;Password=Qwerty123
    - RabbitMQ=rabbitmq:5672
    - Cache=cachedata
    ports:
    - "5004:80"

  interaction.api:
    image: ${DOCKER_REGISTRY-}interactionapi
    container_name: interactionAPI
    build:
      context: .
      dockerfile: src/Services/Interaction/Interaction.API/Dockerfile    
    environment:
    - ConnectionString=Server=sqldata;Database=IdentityDb;User Id=admin;Password=Qwerty123
    - RabbitMQ=rabbitmq:5672
    - Cache=cachedata
    ports:
    - "5005:80"

  subscription.api:
    image: ${DOCKER_REGISTRY-}subscriptionapi
    container_name: subscriptionAPI
    build:
      context: .
      dockerfile: src/Services/Subscription/Subscriptions.API/Dockerfile    
    environment:
    - ConnectionString=Server=sqldata;Database=IdentityDb;User Id=admin;Password=Qwerty123
    - RabbitMQ=rabbitmq:5672
    - Cache=cachedata
    ports:
    - "5006:80"

  sqldata:
    image: postgres:13.3
    container_name: sqldata
    environment:
       POSTGRES_USER: "admin"
       POSTGRES_PASSWORD: "Qwerty123"
    ports:
      - "5432:5432"
    volumes:
      - corviana-backend-sqldata:/var/lib/postgresql/data

  cachedata:
    container_name: cachedata
    image: redis:latest
 
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
    corviana-backend-sqldata:
        driver: local











